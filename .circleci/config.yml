version: 2.1

filter-not-main: &filter-not-main
  filters:
    branches:
      ignore:
        - main
        - /^hotfix\/.+/

filter-main: &filter-main
  filters:
    branches:
      only:
        - main
        - /^hotfix\/.+/

filter-release: &filter-release
  filters:
    tags:
      only: /^release-202[\d-]+/
    branches:
      ignore: /.*/

orbs:
  aws-cli: circleci/aws-cli@2.0.3
  terraform: circleci/terraform@3.2.1
  cypress: cypress-io/cypress@1.27.0
  node: circleci/node@5
  ruby: circleci/ruby@2
  slack: circleci/slack@4.3.0
  tariff: trade-tariff/trade-tariff-ci-orb@0

executors:
  terraform:
    docker:
      - image: hashicorp/terraform:1.5.5
    resource_class: small
    working_directory: "/tmp/terraform"
    environment:
      TF_INPUT: 0
      TF_IN_AUTOMATION: 1

jobs:
  write-docker-tag:
    parameters:
      environment:
        type: string
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run: echo "docker_tag = \"$(git rev-parse --short HEAD)\"" >> terraform/config_<< parameters.environment >>.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - terraform/

  fmt-validate-terraform:
    executor: terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - terraform/init:
          path: terraform/
          backend_config_file: backends/<< parameters.environment >>.tfbackend
      - terraform/fmt:
          path: terraform/
      - terraform/validate:
          path: terraform/

  plan-terraform:
    executor: terraform
    environment:
      TF_CLI_ARGS: "-lock=false"
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - terraform/init:
          path: terraform/
          backend_config_file: backends/<< parameters.environment >>.tfbackend
      - terraform/plan:
          path: terraform/
          backend_config_file: backends/<< parameters.environment >>.tfbackend
          var_file: config_<< parameters.environment >>.tfvars

  apply-terraform:
    executor: terraform
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - run:
          name: Add curl
          command: apk --no-cache add curl jq
      - attach_workspace:
          at: .
      - terraform/init:
          path: terraform/
          backend_config_file: backends/<< parameters.environment >>.tfbackend
      - terraform/apply:
          path: terraform/
          backend_config_file: backends/<< parameters.environment >>.tfbackend
          var_file: config_<< parameters.environment >>.tfvars
          lock-timeout: 5m
      - slack/notify:
          channel: deployments
          event: fail
          template: basic_fail_1
      - slack/notify:
          channel: deployments
          event: pass
          template: basic_success_1

  ruby-checks:
    docker:
      - image: cimg/ruby:3.2.2-node
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: Inspecting with Rubocop
      - run:
          name: GOV linter
          command: bundle exec rake lint:scss
      - run:
          name: Brakeman
          # See https://github.com/presidentbeef/brakeman/issues/1664
          command: bundle exec brakeman -o brakeman_results.html
      - store_artifacts:
          path: brakeman_results.html

  test:
    docker:
      - image: cimg/ruby:3.2.2-node
        environment:
          BUNDLE_JOBS: "3"
          BUNDLE_RETRY: "3"
          RAILS_ENV: test
          COVERAGE: 1
          NODE_OPTIONS: --openssl-legacy-provider
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
      - ruby/rspec-test
      - store_artifacts:
          path: coverage
      - slack/notify:
          channel: deployments
          event: fail
          template: basic_fail_1

  notify-production-deployment:
    docker:
      - image: cimg/ruby:3.2.2
    steps:
      - tariff/notify-production-release:
          app-name: Duty Calculator
          slack-channel: trade_tariff
          release-tag: $CIRCLE_TAG

workflows:
  version: 2

  deploy-to-development:
    jobs:
      - ruby-checks:
          <<: *filter-not-main

      - test:
          context: trade-tariff-notifications
          <<: *filter-not-main

      - write-docker-tag:
          name: write-docker-tag-dev
          environment: development
          <<: *filter-not-main
          requires:
            - ruby-checks
            - test

      - fmt-validate-terraform:
          name: fmt-terraform-dev
          context: trade-tariff-terraform-aws-development
          environment: development
          <<: *filter-not-main

      - plan-terraform:
          name: plan-terraform-dev
          context: trade-tariff-terraform-aws-development
          environment: development
          requires:
            - write-docker-tag-dev
            - fmt-terraform-dev
          <<: *filter-not-main

      - tariff/build-and-push:
          name: build-and-push-dev
          context: trade-tariff-terraform-aws-development
          environment: development
          image_name: tariff-duty-calculator
          ssm_parameter: "/development/DUTY_CALCULATOR_ECR_URL"
          <<: *filter-not-main

      - confirm-deploy-for-qa?:
          type: approval
          requires:
            - test
            - plan-terraform-dev
            - build-and-push-dev
          <<: *filter-not-main

      - apply-terraform:
          name: apply-terraform-dev
          context: trade-tariff-terraform-aws-development
          environment: development
          requires:
            - confirm-deploy-for-qa?
          <<: *filter-not-main

      - tariff/smoketests:
          name: smoketest-dev
          context: trade-tariff-testing
          url: https://dev.trade-tariff.service.gov.uk
          yarn_run: dev-tariff-duty-calculator-smoketests
          requires:
            - apply-terraform-dev
          <<: *filter-not-main

  deploy-to-staging:
    jobs:
      - write-docker-tag:
          name: write-docker-tag-staging
          environment: staging

      - plan-terraform:
          name: plan-terraform-staging
          context: trade-tariff-terraform-aws-staging
          environment: staging
          requires:
            - write-docker-tag-staging
          <<: *filter-not-main

      - tariff/build-and-push:
          name: build-and-push-live
          context: trade-tariff-terraform-aws-staging
          environment: staging
          image_name: tariff-duty-calculator
          ssm_parameter: "/staging/DUTY_CALCULATOR_ECR_URL"
          <<: *filter-main

      - apply-terraform:
          name: apply-terraform-staging
          context: trade-tariff-terraform-aws-staging
          environment: staging
          requires:
            - write-docker-tag-staging
            - plan-terraform-staging
            - build-and-push-live
          <<: *filter-main

      - tariff/smoketests:
          context: trade-tariff-testing
          url: https://staging.trade-tariff.service.gov.uk
          yarn_run: staging-tariff-duty-calculator-smoketests
          requires:
            - apply-terraform-staging
          <<: *filter-main

  deploy-to-production:
    jobs:
      - write-docker-tag:
          name: write-docker-tag-prod
          environment: production

      - plan-terraform:
          name: plan-terraform-prod
          context: trade-tariff-terraform-aws-production
          environment: production
          requires:
            - write-docker-tag-prod
          <<: *filter-not-main

      - promote-to-production?:
          type: approval
          <<: *filter-main

      - tariff/create-production-release:
          context: trade-tariff-releases
          image-name: tariff-duty-calculator-production
          requires:
            - promote-to-production?
          <<: *filter-main

      - write-docker-tag:
          name: write-docker-tag-prod-release
          environment: production
          <<: *filter-release

      - apply-terraform:
          name: apply-terraform-prod
          context: trade-tariff-terraform-aws-production
          environment: production
          requires:
            - write-docker-tag-prod-release
          <<: *filter-release

      - notify-production-deployment:
          context: trade-tariff-releases
          requires:
            - apply-terraform-prod
          <<: *filter-release
